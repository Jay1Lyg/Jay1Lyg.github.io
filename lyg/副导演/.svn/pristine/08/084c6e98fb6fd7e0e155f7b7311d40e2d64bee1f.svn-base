var keystone = require('keystone'),
	Invitation = keystone.list('Invitation'),
	Category = keystone.list('Category'),
	Production = keystone.list('Production'),
	User = keystone.list('User'),
	CareerInCrew = keystone.list('CareerInCrew'),
  Category = keystone.list('Category');
  BoundProductionAndInvited = keystone.list('BoundProductionAndInvited');
var async = require('async');
var config = require('../../public/conf/common.js');
var urllib = require('url');
var search = require('../../query/save_and_get_data_in_MongoDB/resume/search.js');
var _ = require('underscore');

exports = module.exports = function(req, res) {
	var page = req.params.page;
	var careerincrew_id = req.careerincrew_id;
	var result=[];
      Invitation.paginate({
        page: page,
        perPage: 6,
        maxPages: 10
      })
     .where('career_in_crews',careerincrew_id)
     .exec(function(err,ret){
       if(err){
          throw new Error(err);
       }else{
          result.total = ret.total;
          result.currentPage = ret.currentPage;
       	  async.each(ret.result,function(item,next){
       	  	var detail={};
       	  	async.waterfall([
       	  	   function(callback){
       	  	   	  detail.invitestate=item.invitestate;
       	  	   	  detail.invited=item.invited;
       	  	   	  detail.invitationid=item._id;
       	  	   	  detail.invite_date=item.invite_date;
       	  	   	  detail.agree_or_refuse_date=item.agree_or_refuse_date;
                  callback(null);
       	  	   },function(callback){//查询演员基本信息
                   User.model.find()
                    .where('_id',item.invited)
                    .exec(function(err,ret){
                       if(err){
                          throw new Error(err);
                       }else{
                          search.getActorDetail(ret,function(err,ret1){
                              if(err){
                                throw new Error(err);
                              }else{
                                _.extend(detail, ret1[0]);
                                callback(null);                         
                              }
                          }); 
                       }
                    })
               }
       	  	],function(err){
               if(err){
                 throw new Error(err);
               }else{
                 result.push(detail);
                 next();
               }
                
            });
            
       	  },function(err){
              if(err){
                 throw new Error(err);
              }else{
                    var params = urllib.parse(req.url,true);
                    if(result.length == 0){
                        //console.log('请求1:'+params);
                      if (params.query && params.query.callback) {
                          //console.log('请求2:'+params.query);
                          var str =  params.query.callback + '(' + JSON.stringify({}) + ')';//jsonp
                          res.send(str);
                      } else {
                          res.send(JSON.stringify({}));//普通的json
                      }
                    }else{
                      if (params.query && params.query.callback) {
                          //console.log('请求2:'+params.query); 
                           var str =  params.query.callback + '(' + JSON.stringify(result) + ')';//jsonp
                           res.send(str);           
                      } 
                    }
              }
          });
       }
     })


}