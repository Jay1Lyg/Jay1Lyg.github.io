var async = require('async');
var keystone = require('keystone'),
    Role = keystone.list('Role'),
  	User = keystone.list('User'),
	  CareerInCrew = keystone.list('CareerInCrew'),
    Resume = keystone.list('Resume');
    Casting = keystone.list('Casting');

var config = require('../../../public/conf/common.js');
var format=require('../resume/format.js');

var isTagsTypeMatch = function(type_id, type_array){
  var flag=false;
  if(type_id==null || type_array==null || type_array.length==0) throw new Error('empty type_id or type_array!'); //Ã‚Â¹ÃƒÂ½Ãƒâ€šÃƒâ€¹ÃƒÅ’ÃƒÂµÃ‚Â¼ÃƒÂ¾ÃƒÅ½ÃƒÅ¾ÃƒÂÃ‚Â?
  for(var cat in type_array) {
    console.log('---------------');
    console.log(type_id);
    console.log(type_array[cat]);
    console.log(type_array[cat]==type_id);
    console.log('---------------');
    if(type_array[cat]==type_id) flag=true;
  }
  return flag;
}

var formatMatchTag = function(giveTagsArray,ownTagsArray,callback){
  var flag = false;
  async.waterfall([
  	function(callback){//判断前端传来的标签里是否有不限
      for(var cat in giveTagsArray) {
        console.log('---------------');
        console.log('前端传来标签有不限');
        console.log(giveTagsArray);
        console.log('---------------');
        if(giveTagsArray[cat]=='59a721769c2bd4746065d7f6'||giveTagsArray[cat]=='59acc64425d3453c2a50bbfe'||giveTagsArray[cat]=='59aa2b24d1caefb01b1f6e45') flag=true;
      }
      callback(null,flag);
    },function(arg,callback){
       console.log('1');
       console.log(arg);
       if(arg){
          console.log('2');
          callback(null,arg);
       }else{
          console.log('3');
          for(var i=0;i<giveTagsArray.length;i++){
            if(isTagsTypeMatch(giveTagsArray[i],ownTagsArray)){
                  flag = true;
                  console.log('4');
                  callback(null,flag); 
                  break;
            }else{
                if(i==giveTagsArray.length-1){
                  flag=false; 
                  callback(null,flag);
                }
            }
          }
       }
    }
  ],function(err,arg){
      if(err){
         throw new Error(err);
      }else{
         callback(null,arg);
      }
  })
}

var matchShapAccordingToMale=function(shap,BMI,callback){//男性体型匹配
   console.log('------------------------');
   console.log(shap);
   console.log(BMI);
   console.log('------------------------');
   var nowdate=new Date();
   switch(parseInt(shap)){
     case 0://不限
         flag=true;
         callback(null,flag);
         break; 
     case 1://消瘦（BMI<17.6）
        if(BMI<17.6){
            flag=true;
            callback(null,flag);
            break; 
        }else{
           flag=false;
           callback(null,flag);
           break;
        }

      case 2://偏瘦(17.6-19.6)
        if(17.6<=BMI && BMI<=19.6){
           flag=true;
           callback(null,flag);
           break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
      case 3://适中(19.6-25.4)
        if(19.6<=BMI && BMI<=25.4){
            flag=true;
            console.log('!');
            callback(null,flag);
            break;
        }else{
          flag=false;
          console.log('?');
          callback(null,flag);
          break;
        }
      case 4://健硕(25.4-29.7)
        if(25.4<=BMI && BMI<=29.7){
          flag=true;
          callback(null,flag);
          break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
      case 5://胖子(29.7以上)
        if(BMI>29.7){
          flag=true;
          callback(null,flag);
          break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
     }
}

var matchShapAccordingToFemale=function(shap,BMI,callback){//女性体型匹配
   var nowdate=new Date();
   console.log('-------');
   console.log(shap);
   switch(parseInt(shap)){
     case 0://不限
         flag=true;
         callback(null,flag);
         break; 
     case 1://消瘦（BMI<16.5）
        if(BMI<16.5){
            flag=true;
            callback(null,flag);
            break; 
        }else{
           flag=false;
           callback(null,flag);
           break;
        }
      case 2://偏瘦(16.5-18.7)
        if(16.5<=BMI && BMI<=18.7){
           flag=true;
           callback(null,flag);
           break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
      case 3://适中(18.7-25)
        if(18.7<=BMI && BMI<=25){
            flag=true;
            callback(null,flag);
            break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
      case 4://健硕(25-29.7)
        if(25<=BMI && BMI<=29.7){
          flag=true;
          callback(null,flag);
          break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
      case 5://胖子(29.7以上)
        if(BMI>29.7){
          flag=true;
          callback(null,flag);
          break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
     }
}
var matchShap=function(obj,user,callback){//匹配体型
   var height = user.height/100;//(换算成m)
   var BMI = user.weight/(height*height);
   console.log('---------3----------');
   console.log(user);
   console.log('---------3----------');
   if(user.gender==1){//性别为男（男女计算公式不同）
      matchShapAccordingToMale(obj.shape,BMI,function(err,status){
        if(err){
           throw new Error(err);
        }else{
          console.log('男生体格匹配');
          console.log('BMI:'+BMI);
          console.log(obj.shape);
          callback(null,status);
        }
      });
   }else if(user.gender==2){
      matchShapAccordingToFemale(obj.shape,BMI,function(err,status){
         if(err){
           throw new Error(err);
         }else{
          console.log('女生体格匹配');
          console.log('BMI:'+BMI);
          console.log(obj.shape);
          callback(null,status);
         }
      });
   }
}
var matchHeight=function(obj,user,callback){//匹配身高
   var flag = false;
   if(obj.max_height==''){
       console.log('最高身高不限');
       if(obj.min_height==''){
          console.log('最低身高不限');
          flag = true;
          callback(null,flag); 
       }else{//填了最小身高，最大没填,身高大于最小身高的符合
          console.log('最低身高：'+obj.min_height);
          console.log('用户身高：'+user.height);
          if(user.height>=obj.min_height){
              console.log('身高匹配成功');
              flag = true;
              callback(null,flag); 
          }else{
            console.log('身高匹配失败');
            flag = false;
            callback(null,flag); 
          }
       }
   }else{
        console.log('最高身高：'+obj.max_height);
        if(obj.min_height==''){//填了最大身高，最小没填,身高小于最大身高的符合
           console.log('最低身高不限');
           if(user.height<=obj.max_height){
              console.log('用户身高：'+user.height);
              console.log('身高匹配成功');
              flag = true;
              callback(null,flag); 
           }else{
            console.log('身高匹配失败');
            flag = false;
            callback(null,flag); 
           }
        }else{
          console.log('最低身高：'+obj.min_height);
           if(obj.min_height<=user.height && user.height<=obj.max_height){
              console.log('用户身高：'+user.height);
              console.log('身高匹配成功');
              flag = true;
              callback(null,flag); 
           }else{
            console.log('身高匹配失败');
            flag = false;
            callback(null,flag); 
           }
        }
   }
}

module.exports = {
  formatMatchTag: formatMatchTag,
  matchShapAccordingToFemale : matchShapAccordingToFemale,
  matchShapAccordingToMale : matchShapAccordingToMale,
  matchHeight : matchHeight,
  matchShap : matchShap
}