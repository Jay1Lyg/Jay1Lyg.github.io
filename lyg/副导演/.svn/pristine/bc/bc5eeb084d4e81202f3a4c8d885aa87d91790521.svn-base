var async = require('async');
var keystone = require('keystone'),
    Role = keystone.list('Role'),
  	User = keystone.list('User'),
	  CareerInCrew = keystone.list('CareerInCrew'),
    Resume = keystone.list('Resume');
    Casting = keystone.list('Casting');

var config = require('../../../public/conf/common.js');
var format=require('../resume/format.js');

var isTagsTypeMatch = function(type_id, type_array){
  var flag=false;
  if(type_id==null || type_array==null || type_array.length==0) throw new Error('empty type_id or type_array!'); //Ã‚Â¹ÃƒÂ½Ãƒâ€šÃƒâ€¹ÃƒÅ’ÃƒÂµÃ‚Â¼ÃƒÂ¾ÃƒÅ½ÃƒÅ¾ÃƒÂÃ‚Â?
  for(var cat in type_array) {
    if(type_array[cat]==type_id) flag=true;
  }
  return flag;
}

var formatMatchTag = function(giveTagsArray,ownTagsArray,callback){
  var flag = false;
  async.waterfall([
  	function(callback){//判断前端传来的标签里是否有不限
      for(var cat in giveTagsArray) {
        console.log('---------------');
        console.log('前端传来标签有不限');
        console.log('---------------');
        if(giveTagsArray[cat]=='59a721769c2bd4746065d7f6'||giveTagsArray[cat]=='59acc64425d3453c2a50bbfe'||giveTagsArray[cat]=='59aa2b24d1caefb01b1f6e45') flag=true;
      }
      callback(null,flag);
    },function(arg,callback){
       if(arg){
          callback(null,arg);
       }else{
          async.each(giveTagsArray,function(item,next){
             isTagsTypeMatch(item,ownTagsArray,function(err,ret){
                if(err){
                   throw new Error(err);
                }else{
                   if(ret){//匹配成功
                      callback(null,ret);
                   }else{//匹配失败，匹配下一个
                      flag = false;
                      next();
                   }
                }
             });    
          },function(err){
              if(err){
                throw new Error(err);
              }else{
                callback(null,flag);
              }
          });
       }
    }
  ],function(arg,err){
      if(err){
         throw new Error(err);
      }else{
         callback(null,arg);
      }
  })
}

var matchShapAccordingToMale=function(shap,BMI,callback){//男性体型匹配
   console.log('------------------------');
   console.log(shap);
   console.log(BMI);
   var a=34.1;
   console.log(19.6<a<25.4);
   console.log('------------------------');
   var nowdate=new Date();
   switch(parseInt(shap)){
     case 1://消瘦（BMI<17.6）
        if(BMI<17.6){
            flag=true;
            callback(null,flag);
            break; 
        }else{
           flag=false;
           callback(null,flag);
           break;
        }

      case 2://偏瘦(17.6-19.6)
        if(17.6<=BMI && BMI<=19.6){
           flag=true;
           callback(null,flag);
           break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
      case 3://适中(19.6-25.4)
        if(19.6<=BMI && BMI<=25.4){
            flag=true;
            console.log('!');
            callback(null,flag);
            break;
        }else{
          flag=false;
          console.log('?');
          callback(null,flag);
          break;
        }
      case 4://健硕(25.4-29.7)
        if(25.4<=BMI && BMI<=29.7){
          flag=true;
          callback(null,flag);
          break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
      case 5://胖子(29.7以上)
        if(BMI>29.7){
          flag=true;
          callback(null,flag);
          break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
     }
}

var matchShapAccordingToFemale=function(shap,BMI,callback){//女性体型匹配
   var nowdate=new Date();
   switch(parseInt(shap)){
     case 1://消瘦（BMI<16.5）
        if(BMI<16.5){
            flag=true;
            callback(null,flag);
            break; 
        }else{
           flag=false;
           callback(null,flag);
           break;
        }
      case 2://偏瘦(16.5-18.7)
        if(16.5<=BMI && BMI<=18.7){
           flag=true;
           callback(null,flag);
           break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
      case 3://适中(18.7-25)
        if(18.7<=BMI && BMI<=25){
            flag=true;
            callback(null,flag);
            break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
      case 4://健硕(25-29.7)
        if(25<=BMI && BMI<=29.7){
          flag=true;
          callback(null,flag);
          break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
      case 5://胖子(29.7以上)
        if(BMI>29.7){
          flag=true;
          callback(null,flag);
          break;
        }else{
          flag=false;
          callback(null,flag);
          break;
        }
     }
}

module.exports = {
  formatMatchTag: formatMatchTag,
  matchShapAccordingToFemale : matchShapAccordingToFemale,
  matchShapAccordingToMale : matchShapAccordingToMale,
}